import { Graphics, Vec2 } from '@erikwatson/bramble';
import { ConfigLayer, SnowfallLayer, Snowflake } from './types';
import * as TWEEN from '@tweenjs/tween.js';
export declare class Layer implements SnowfallLayer {
    originalConfig: ConfigLayer;
    config: ConfigLayer;
    snowflakes: Snowflake[];
    width: number;
    height: number;
    paused: boolean;
    windVector: Vec2;
    gravityVector: Vec2;
    fadeWindIn: TWEEN.Tween<ConfigLayer>;
    fadeWindOut: TWEEN.Tween<ConfigLayer>;
    constructor(config: ConfigLayer, width: number, height: number, strength: number, durationIn: number, windDelayIn: number, durationOut: number, windDelayOut: number, changeChance: number);
    setAmplitude(num: number): void;
    setFade(val: boolean): void;
    setFrequency(freq: number): void;
    setGravity(degrees: number, strength: number): void;
    setGravityAngle(degrees: number): void;
    setGravityStrength(strength: number): void;
    setRespectOrientation(val: boolean): void;
    setPaused(pause: boolean): void;
    setWind(degrees: number, strength: number): void;
    setWindAngle(degrees: number): void;
    setWindStrength(strength: number): void;
    setGusts(gusts: boolean): void;
    togglePaused(): void;
    setWindInAdditionalStrengthMin(min: number): void;
    setWindInAdditionalStrengthMax(max: number): void;
    setWindInDurationMin(min: number): void;
    setWindInDurationMax(max: number): void;
    setWindInDelayMin(min: number): void;
    setWindInDelayMax(max: number): void;
    setWindOutDurationMin(min: number): void;
    setWindOutDurationMax(max: number): void;
    setWindOutDelayMin(min: number): void;
    setWindOutDelayMax(max: number): void;
    setWindOutChangeChance(chance: number): void;
    update(dt: number): void;
    render(gfx: Graphics): void;
    start(): void;
    pause(): void;
    resume(): void;
    restart(): void;
    setDensity(density: number): void;
    setColour(colour: string): void;
}
